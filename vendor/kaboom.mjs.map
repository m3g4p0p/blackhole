{
  "version": 3,
  "sources": ["../src/math.ts", "../src/gfx.ts", "../src/app.ts", "../src/audio.ts", "../src/assets.ts", "../src/logger.ts", "../src/net.ts", "../src/kaboom.ts"],
  "sourcesContent": ["type Vec2 = {\n\tx: number,\n\ty: number,\n\tclone: () => Vec2,\n\tadd: (p: Vec2) => Vec2,\n\tsub: (p: Vec2) => Vec2,\n\tscale: (s: number) => Vec2,\n\tdot: (p: Vec2) => Vec2,\n\tdist: (p: Vec2) => number,\n\tlen: () => number,\n\tunit: () => Vec2,\n\tnormal: () => Vec2,\n\tangle: (p: Vec2) => number,\n\tlerp: (p: Vec2, t: number) => Vec2,\n\teq: (p: Vec2) => boolean,\n\tstr: () => string,\n};\n\ntype Vec3 = {\n\tx: number,\n\ty: number,\n\tz: number,\n\txy: () => Vec2,\n};\n\ntype Vec4 = {\n\tx: number,\n\ty: number,\n\tz: number,\n\tw: number,\n};\n\ntype Mat4 = {\n\tm: number[],\n\tclone: () => Mat4,\n\tmult: (m: Mat4) => Mat4,\n\tmultVec4: (m: Vec4) => Vec4,\n\tmultVec3: (m: Vec3) => Vec3,\n\tmultVec2: (m: Vec2) => Vec2,\n\tscale: (s: Vec2) => Mat4,\n\ttranslate: (p: Vec2) => Mat4,\n\trotateX: (a: number) => Mat4,\n\trotateY: (a: number) => Mat4,\n\trotateZ: (a: number) => Mat4,\n\tinvert: () => Mat4,\n};\n\ntype Color = {\n\tr: number,\n\tg: number,\n\tb: number,\n\ta: number,\n\tclone: () => Color,\n\tlighten: (n: number) => Color,\n\tdarken: (n: number) => Color,\n\teq: (c: Color) => boolean,\n};\n\ntype Quad = {\n\tx: number,\n\ty: number,\n\tw: number,\n\th: number,\n\tclone: () => Quad,\n\teq: (q: Quad) => boolean,\n};\n\ntype RNGValue =\n\tnumber\n\t| Vec2\n\t| Color\n\t| any\n\t;\n\ntype RNG = {\n\tseed: number,\n\tgen: (a?: RNGValue, b?: RNGValue) => RNGValue,\n};\n\nfunction deg2rad(degrees: number): number {\n\treturn degrees * Math.PI / 180;\n}\n\nfunction rad2deg(radians: number): number {\n\treturn radians * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction vec2(x?: any, y?: any): Vec2 {\n\n\tif (isVec2(x) && y === undefined) {\n\t\treturn vec2(x.x, x.y);\n\t}\n\n\treturn {\n\t\tx: x ?? 0,\n\t\ty: y ?? (x ?? 0),\n\t\tclone() {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(s) {\n\t\t\treturn vec2(this.x * s, this.y * s);\n\t\t},\n\t\tdist(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen() {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit() {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal() {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x * p2.x, this.y * p2.y);\n\t\t},\n\t\tangle(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.atan2(this.y - p2.y, this.x - p2.x);\n\t\t},\n\t\tlerp(p2, t) {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\teq(other) {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr() {\n\t\t\treturn `(${this.x}, ${this.y})`;\n\t\t},\n\t};\n}\n\n// TODO: terrible name\nfunction vec2FromAngle(a: number): Vec2 {\n\treturn vec2(Math.cos(a), Math.sin(a));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy() {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined && p.x !== undefined && p.y !== undefined;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined && c.r !== undefined && c.g !== undefined && c.b !== undefined && c.a !== undefined;\n}\n\nfunction rgb(r: number, g: number, b: number): Color {\n\treturn rgba(r, g, b, 1);\n}\n\nfunction rgba(...args): Color {\n\n\targs = [...args];\n\n\tif (args.length === 0) {\n\t\treturn rgba(1, 1, 1, 1);\n\t}\n\n\treturn {\n\t\tr: args[0],\n\t\tg: args[1],\n\t\tb: args[2],\n\t\ta: args[3] ?? 1,\n\t\tclone() {\n\t\t\treturn rgba(this.r, this.g, this.b, this.a);\n\t\t},\n\t\tlighten(a) {\n\t\t\treturn rgba(this.r + a, this.g + a, this.b + a, this.a);\n\t\t},\n\t\tdarken(a) {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\teq(other) {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.g\n\t\t\t\t&& this.a === other.a;\n\t\t},\n\t};\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tw: w,\n\t\th: h,\n\t\tclone() {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other) {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, -Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\tMath.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\n// easy sine wave\nfunction wave(lo: number, hi: number, t: number): number {\n\treturn lo + (Math.sin(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\nconst defRNG = makeRng(Date.now());\n\nfunction makeRng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(a?: RNGValue, b?: RNGValue): RNGValue {\n\t\t\tif (isVec2(a) && isVec2(b)) {\n\t\t\t\treturn vec2(\n\t\t\t\t\tthis.gen(a.x, b.x),\n\t\t\t\t\tthis.gen(a.y, b.y),\n\t\t\t\t);\n\t\t\t} else if (isColor(a) && isColor(b)) {\n\t\t\t\treturn rgba(\n\t\t\t\t\tthis.gen(a.r, b.r),\n\t\t\t\t\tthis.gen(a.g, b.g),\n\t\t\t\t\tthis.gen(a.b, b.b),\n\t\t\t\t\tthis.gen(a.a, b.a),\n\t\t\t\t);\n\t\t\t} else if (a !== undefined) {\n\t\t\t\tif (b === undefined) {\n\t\t\t\t\treturn this.gen() * a;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.gen() * (b - a) + a;\n\t\t\t\t}\n\t\t\t} else if (a === undefined && b === undefined) {\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"invalid param to rand()\");\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed: number) {\n\tdefRNG.seed = seed;\n}\n\nfunction rand(a?: RNGValue, b?: RNGValue): RNGValue {\n\treturn defRNG.gen(a, b);\n}\n\nfunction chance(p: number): boolean {\n\treturn rand(0, 1) <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[Math.floor(rand(list.length))];\n}\n\ntype Rect = {\n\tp1: Vec2,\n\tp2: Vec2,\n};\n\ntype Line = {\n\tp1: Vec2,\n\tp2: Vec2,\n};\n\nfunction colRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction overlapRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\nfunction colLineLine(l1: Line, l2: Line): boolean {\n\tconst a =\n\t\t(\n\t\t\t(l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p1.y - l2.p1.y)\n\t\t\t- (l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p1.x - l2.p1.x)\n\t\t)\n\t\t/\n\t\t(\n\t\t\t(l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p2.x - l1.p1.x)\n\t\t\t- (l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p2.y - l1.p1.y)\n\t\t);\n\tconst b =\n\t\t(\n\t\t\t(l1.p2.x - l1.p1.x)\n\t\t\t* (l1.p1.y - l2.p1.y)\n\t\t\t- (l1.p2.y - l1.p1.y)\n\t\t\t* (l1.p1.x - l2.p1.x)\n\t\t)\n\t\t/\n\t\t(\n\t\t\t(l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p2.x - l1.p1.x)\n\t\t\t- (l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p2.y - l1.p1.y)\n\t\t);\n\treturn a >= 0.0 && a <= 1.0 && b >= 0.0 && b <= 1.0;\n}\n\nfunction colRectLine(r: Rect, l: Line): boolean {\n\tif (colRectPt(r, l.p1) || colRectPt(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn colLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| colLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| colLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| colLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction colRectPt(r: Rect, pt: Vec2): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y < r.p2.y;\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tVec2,\n\tVec3,\n\tQuad,\n\tColor,\n\tMat4,\n\tRNG,\n\tRNGValue,\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgba,\n\trgb,\n\tmakeRng,\n\trand,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\tcolRectRect,\n\toverlapRectRect,\n\tcolLineLine,\n\tcolRectLine,\n\tcolRectPt,\n\tvec2FromAngle,\n\tisVec2,\n\tisColor,\n};\n", "import {\n\tVec2,\n\tVec3,\n\tColor,\n\tMat4,\n\tQuad,\n\tvec2,\n\tvec3,\n\tquad,\n\trgba,\n\tmat4,\n} from \"./math\";\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\ntype GfxProgram = {\n\tbind: () => void,\n\tunbind: () => void,\n\tbindAttribs: () => void,\n\tsendFloat: (name: string, val: number) => void,\n\tsendVec2: (name: string, p: Vec2) => void,\n\tsendVec3: (name: string, p: Vec3) => void,\n\tsendColor: (name: string, p: Color) => void,\n\tsendMat4: (name: string, m: Mat4) => void,\n}\n\ntype GfxTexture = {\n\twidth: number,\n\theight: number,\n\tbind: () => void,\n\tunbind: () => void,\n};\n\ntype GfxTextureData =\n\tHTMLImageElement\n\t| HTMLCanvasElement\n\t| ImageData\n\t| ImageBitmap\n\t;\n\ntype GfxFont = {\n\ttex: GfxTexture,\n\tmap: Record<string, Vec2>,\n\tqw: number,\n\tqh: number,\n};\n\ntype Vertex = {\n\tpos: Vec3,\n\tuv: Vec2,\n\tcolor: Color,\n};\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tdrawCalls: number,\n\tdefProg: GfxProgram,\n\tcurProg: GfxProgram,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n};\n\ntype DrawQuadConf = {\n\tpos?: Vec2,\n\twidth?: number,\n\theight?: number,\n\tscale?: Vec2 | number,\n\trot?: number,\n\tcolor?: Color,\n\torigin?: Origin | Vec2,\n\tz?: number,\n\ttex?: GfxTexture,\n\tquad?: Quad,\n\tprog?: GfxProgram,\n};\n\ntype DrawTextureConf = {\n\tpos?: Vec2,\n\tscale?: Vec2 | number,\n\trot?: number,\n\tcolor?: Color,\n\torigin?: Origin | Vec2,\n\tquad?: Quad,\n\tz?: number,\n\tprog?: GfxProgram,\n};\n\ntype DrawRectStrokeConf = {\n\twidth?: number,\n\tscale?: Vec2 | number,\n\trot?: number,\n\tcolor?: Color,\n\torigin?: Origin | Vec2,\n\tz?: number,\n\tprog?: GfxProgram,\n};\n\ntype DrawRectConf = {\n\tscale?: Vec2 | number,\n\trot?: number,\n\tcolor?: Color,\n\torigin?: Origin | Vec2,\n\tz?: number,\n\tprog?: GfxProgram,\n};\n\ntype DrawLineConf = {\n\twidth?: number,\n\tcolor?: Color,\n\tz?: number,\n\tprog?: GfxProgram,\n};\n\ntype DrawTextConf = {\n\tsize?: number,\n\tpos?: Vec2,\n\tscale?: Vec2 | number,\n\trot?: number,\n\tcolor?: Color,\n\torigin?: Origin | Vec2,\n\twidth?: number,\n\tz?: number,\n\tprog?: GfxProgram,\n};\n\ntype FormattedChar = {\n\ttex: GfxTexture,\n\tquad: Quad,\n\tch: string,\n\tpos: Vec2,\n\tscale: Vec2,\n\tcolor: Color,\n\torigin: string,\n\tz: number,\n};\n\ntype FormattedText = {\n\twidth: number,\n\theight: number,\n\tchars: FormattedChar[],\n};\n\ntype Origin =\n\t\"topleft\"\n\t| \"top\"\n\t| \"topright\"\n\t| \"left\"\n\t| \"center\"\n\t| \"right\"\n\t| \"botleft\"\n\t| \"bot\"\n\t| \"botright\"\n\t;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\ntype GfxConf = {\n\tclearColor?: Color,\n\tscale?: number,\n};\n\ntype Gfx = {\n\twidth: () => number,\n\theight: () => number,\n\tscale: () => number,\n\tmakeTex: (data: GfxTextureData) => GfxTexture,\n\tmakeProgram: (vert: string, frag: string) => GfxProgram,\n\tmakeFont: (\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t) => GfxFont,\n\tdrawTexture: (\n\t\ttex: GfxTexture,\n\t\tconf?: DrawTextureConf,\n\t) => void,\n\tdrawText: (\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf?: DrawTextConf,\n\t) => void,\n\tdrawFmtText: (ftext: FormattedText) => void,\n\tfmtText: (\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf?: DrawTextConf,\n\t) => FormattedText,\n\tdrawRect: (\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf?: DrawRectConf,\n\t) => void,\n\tdrawRectStroke: (\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf?: DrawRectStrokeConf,\n\t) => void,\n\tdrawLine: (\n\t\tp1: Vec2,\n\t\tp2: Vec2,\n\t\tconf: DrawLineConf,\n\t) => void,\n\tframeStart: () => void,\n\tframeEnd: () => void,\n\tpushTransform: () => void,\n\tpopTransform: () => void,\n\tpushMatrix: (m: Mat4) => void,\n\tdrawCalls: () => number,\n};\n\nfunction gfxInit(gl: WebGLRenderingContext, gconf: GfxConf): Gfx {\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defProg = makeProgram(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gconf.clearColor ?? rgba(0, 0, 0, 0);\n\n\t\tgl.clearColor(c.r, c.g, c.b, c.a);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tdefProg: defProg,\n\t\t\tcurProg: defProg,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t};\n\n\t})();\n\n\tfunction makeTex(data: GfxTextureData): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeProgram(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxProgram {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\t// TODO: fails on safari with no msg\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsendFloat(name: string, f: number) {\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tgl.uniform1f(loc, f);\n\t\t\t},\n\n\t\t\tsendVec2(name: string, p: Vec2) {\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tgl.uniform2f(loc, p.x, p.y);\n\t\t\t},\n\n\t\t\tsendVec3(name: string, p: Vec3) {\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tgl.uniform3f(loc, p.x, p.y, p.z);\n\t\t\t},\n\n\t\t\tsendColor(name: string, c: Color) {\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tgl.uniform4f(loc, c.r, c.g, c.b, c.a);\n\t\t\t},\n\n\t\t\tsendMat4(name: string, m: Mat4) {\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(m.m));\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tprog: GfxProgram = gfx.defProg,\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tprog = prog ?? gfx.defProg;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| prog !== gfx.curProg\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curProg = prog;\n\n\t\tconst nIndices = indices\n\t\t\t.map((i) => {\n\t\t\t\treturn i + gfx.vqueue.length / STRIDE;\n\t\t\t});\n\n\t\tconst nVerts = verts\n\t\t\t.map((v) => {\n\t\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\t\treturn [\n\t\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\t\tv.color.r, v.color.g, v.color.b, v.color.a\n\t\t\t\t];\n\t\t\t})\n\t\t\t.flat();\n\n\t\tnIndices.forEach((i) => gfx.iqueue.push(i));\n\t\tnVerts.forEach((v) => gfx.vqueue.push(v));\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curProg\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curProg.bind();\n\t\tgfx.curProg.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curProg.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.drawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\t// TODO: don't use push as prefix for these\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(p: Vec2) {\n\t\tif (!p || (p.x === 0 && p.y === 0)) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(p: Vec2) {\n\t\tif (!p || (p.x === 0 && p.y === 0)) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// TODO: clean\n\t// draw a textured quad\n\tfunction drawQuad(conf: DrawQuadConf = {}) {\n\n\t\tconst w = conf.width || 0;\n\t\tconst h = conf.height || 0;\n\t\tconst pos = conf.pos || vec2(0, 0);\n\t\tconst origin = originPt(conf.origin || DEF_ORIGIN);\n\t\tconst offset = origin.dot(vec2(w, h).scale(-0.5));\n\t\tconst scale = vec2(conf.scale ?? 1);\n\t\tconst rot = conf.rot || 0;\n\t\tconst q = conf.quad || quad(0, 0, 1, 1);\n\t\tconst z = 1 - (conf.z ?? 0);\n\t\tconst color = conf.color || rgba(1, 1, 1, 1);\n\n\t\t// TODO: (maybe) not use matrix transform here?\n\t\tpushTransform();\n\t\tpushTranslate(pos);\n\t\tpushScale(scale);\n\t\tpushRotateZ(rot);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, z),\n\t\t\t\tuv: vec2(q.x, q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, z),\n\t\t\t\tuv: vec2(q.x, q.y),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, z),\n\t\t\t\tuv: vec2(q.x + q.w, q.y),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, z),\n\t\t\t\tuv: vec2(q.x + q.w, q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], conf.tex);\n\n\t\tpopTransform();\n\n\t}\n\n\t// TODO: remove\n\tfunction drawTexture(\n\t\ttex: GfxTexture,\n\t\tconf: DrawTextureConf = {},\n\t) {\n\n\t\tconst q = conf.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = tex.width * q.w;\n\t\tconst h = tex.height * q.h;\n\n\t\tdrawQuad({\n\t\t\ttex: tex,\n\t\t\tquad: q,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tpos: conf.pos,\n\t\t\tscale: conf.scale,\n\t\t\trot: conf.rot,\n\t\t\tcolor: conf.color,\n\t\t\torigin: conf.origin,\n\t\t\tz: conf.z,\n\t\t});\n\n\t}\n\n\tfunction drawRect(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf: DrawRectConf = {}\n\t) {\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\t}\n\n\tfunction drawRectStroke(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf: DrawRectStrokeConf = {}\n\t) {\n\n\t\tconst offset = originPt(conf.origin || DEF_ORIGIN).dot(vec2(w, h)).scale(0.5);\n\t\tconst p1 = pos.add(vec2(-w / 2, -h / 2)).sub(offset);\n\t\tconst p2 = pos.add(vec2(-w / 2,  h / 2)).sub(offset);\n\t\tconst p3 = pos.add(vec2( w / 2,  h / 2)).sub(offset);\n\t\tconst p4 = pos.add(vec2( w / 2, -h / 2)).sub(offset);\n\n\t\tdrawLine(p1, p2, conf);\n\t\tdrawLine(p2, p3, conf);\n\t\tdrawLine(p3, p4, conf);\n\t\tdrawLine(p4, p1, conf);\n\n\t}\n\n\tfunction drawLine(\n\t\tp1: Vec2,\n\t\tp2: Vec2,\n\t\tconf: DrawLineConf = {},\n\t) {\n\n\t\tconst w = conf.width || 1;\n\t\tconst h = p1.dist(p2);\n\t\tconst rot = Math.PI / 2 - p1.angle(p2);\n\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\tpos: p1.add(p2).scale(0.5),\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\trot: rot,\n\t\t\torigin: \"center\",\n\t\t});\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(\n\t\ttext: string,\n\t\tfont: GfxFont,\n\t\tconf: DrawTextConf = {}\n\t): FormattedText {\n\n\t\tconst chars = (text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = conf.size || gh;\n\t\tconst scale = vec2(size / gh).dot(vec2(conf.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [[]];\n\n\t\t// check new lines and calc area size\n\t\tfor (const char of chars) {\n\t\t\t// go new line if \\n or exceeds wrap value\n\t\t\tif (char === \"\\n\" || (conf.width ? (curX + cw > conf.width) : false)) {\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tflines.push([]);\n\t\t\t}\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tflines[flines.length - 1].push(char);\n\t\t\t\tcurX += cw;\n\t\t\t}\n\t\t\ttw = Math.max(tw, curX);\n\t\t}\n\n\t\tif (conf.width) {\n\t\t\ttw = conf.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(conf.pos);\n\t\tconst offset = originPt(conf.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tfchars.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\tcolor: conf.color,\n\t\t\t\t\t\torigin: conf.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tz: conf.z,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf = {},\n\t) {\n\t\tdrawFmtText(fmtText(txt, font, conf));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tcolor: ch.color,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t\tz: ch.z,\n\t\t\t});\n\t\t}\n\t}\n\n\t// get current canvas width\n\tfunction width(): number {\n\t\treturn gl.drawingBufferWidth / scale();\n\t}\n\n\t// get current canvas height\n\tfunction height(): number {\n\t\treturn gl.drawingBufferHeight / scale();\n\t}\n\n\tfunction scale(): number {\n\t\treturn gconf.scale ?? 1;\n\t}\n\n\t// TODO: type this\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeProgram,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawRectStroke,\n\t\tdrawLine,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushMatrix,\n\t\tdrawCalls,\n\t};\n\n}\n\nexport {\n\tGfx,\n\tGfxConf,\n\tVertex,\n\tGfxFont,\n\tGfxProgram,\n\tGfxTexture,\n\tGfxTextureData,\n\tDrawTextureConf,\n\tDrawTextConf,\n\tOrigin,\n\toriginPt,\n\tgfxInit,\n};\n", "import {\n\tVec2,\n\tvec2,\n} from \"./math\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppConf = {\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\tfullscreen?: boolean,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseState: ButtonState,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos: () => Vec2,\n\tkeyDown: (k: string) => boolean,\n\tkeyPressed: (k: string) => boolean,\n\tkeyPressedRep: (k: string) => boolean,\n\tkeyReleased: (k: string) => boolean,\n\tmouseDown: () => boolean,\n\tmouseClicked: () => boolean,\n\tmouseReleased: () => boolean,\n\tcharInputted: () => string[],\n\tcursor: (c: string) => void,\n\tdt: () => number,\n\ttime: () => number,\n\tscreenshot: () => string,\n\trun: (f: () => void) => void,\n\tquit: () => void,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction appInit(gconf: AppConf = {}): App {\n\n\tconst app: AppCtx = {\n\t\tcanvas: gconf.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t(gconf.root ?? document.body).appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tmouseState: \"up\",\n\t\tmousePos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gconf.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t];\n\n\tif (gconf.fullscreen) {\n\t\tapp.canvas.width = window.innerWidth;\n\t\tapp.canvas.height = window.innerHeight;\n\t} else {\n\t\tapp.canvas.width = (gconf.width || 640) * app.scale;\n\t\tapp.canvas.height = (gconf.height || 480) * app.scale;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gconf.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) ||\n\t\t(navigator.maxTouchPoints > 0) ||\n\t\t(navigator.msMaxTouchPoints > 0);\n\n\tapp.canvas.addEventListener(\"contextmenu\", (e) => {\n\t\te.preventDefault();\n\t});\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t});\n\n\tapp.canvas.addEventListener(\"mousedown\", () => {\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", () => {\n\t\tapp.mouseState = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(k);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.focus();\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n//  \t\t\t\taudio.ctx().resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n//  \t\t\t\taudio.ctx().suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseClicked(): boolean {\n\t\treturn app.mouseState === \"pressed\";\n\t}\n\n\tfunction mouseDown(): boolean {\n\t\treturn app.mouseState === \"pressed\" || app.mouseState === \"down\";\n\t}\n\n\tfunction mouseReleased(): boolean {\n\t\treturn app.mouseState === \"released\";\n\t}\n\n\tfunction keyPressed(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\";\n\t}\n\n\tfunction keyPressedRep(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t}\n\n\tfunction keyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction keyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\tfunction cursor(c: string) {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c ?? \"default\";\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tapp.mouseState = processBtnState(app.mouseState);\n\t\t\tapp.charInputted = [];\n\n\t\t\tif (!app.stopped) {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t}\n\n\t\t};\n\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tkeyDown,\n\t\tkeyPressed,\n\t\tkeyPressedRep,\n\t\tkeyReleased,\n\t\tmouseDown,\n\t\tmouseClicked,\n\t\tmouseReleased,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n", "import {\n\tclamp,\n} from \"./math\";\n\ntype AudioPlayConf = {\n\tloop?: boolean,\n\tvolume?: number,\n\tspeed?: number,\n\tdetune?: number,\n\tseek?: number,\n};\n\ntype AudioPlay = {\n\tplay: (seek?: number) => void,\n\tstop: () => void,\n\tpause: () => void,\n\tpaused: () => boolean,\n\tstopped: () => boolean,\n\tspeed: (s?: number) => number,\n\tdetune: (d?: number) => number,\n\tvolume: (v?: number) => number,\n\ttime: () => number,\n\tduration: () => number,\n\tloop: () => void,\n\tunloop: () => void,\n};\n\ntype AudioCtx = {\n\tctx: AudioContext,\n\tgainNode: GainNode,\n\tmasterNode: AudioNode,\n};\n\ntype Audio = {\n\tctx: () => AudioContext,\n\tvolume: (v: number) => number,\n\tplay: (sound: AudioBuffer, conf?: AudioPlayConf) => AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\nfunction audioInit(): Audio {\n\n\tconst audio: AudioCtx = (() => {\n\n\t\tconst ctx = new (window.AudioContext || window.webkitAudioContext)();\n\t\tconst gainNode = ctx.createGain();\n\t\tconst masterNode = gainNode;\n\n\t\tmasterNode.connect(ctx.destination);\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tgainNode,\n\t\t\tmasterNode,\n\t\t};\n\n\t})();\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.gainNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn audio.gainNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsound: AudioBuffer,\n\t\tconf: AudioPlayConf = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = audio.ctx.createBufferSource();\n\n\t\tsrcNode.buffer = sound;\n\t\tsrcNode.loop = conf.loop ? true : false;\n\n\t\tconst gainNode = audio.ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(audio.masterNode);\n\n\t\tconst pos = conf.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = audio.ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = audio.ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = audio.ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = audio.ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tthis.stop();\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn sound.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped && stopTime) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn audio.ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(conf.speed);\n\t\thandle.detune(conf.detune);\n\t\thandle.volume(conf.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction ctx(): AudioContext {\n\t\treturn audio.ctx;\n\t}\n\n\treturn {\n\t\tctx,\n\t\tvolume,\n\t\tplay,\n\t};\n\n}\n\nexport {\n\tAudio,\n\tAudioPlayConf,\n\tAudioPlay,\n\taudioInit,\n};\n", "import {\n\tQuad,\n\tquad,\n} from \"./math\";\n\nimport {\n\tGfx,\n\tGfxFont,\n\tGfxProgram,\n\tGfxTexture,\n\tGfxTextureData,\n} from \"./gfx\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport unsciiSrc from \"./unscii_8x8.png\";\n\ntype SpriteAnim = {\n\tfrom: number,\n\tto: number,\n};\n\ntype SpriteLoadConf = {\n\tsliceX?: number,\n\tsliceY?: number,\n\tanims?: Record<string, SpriteAnim>,\n};\n\ntype SpriteLoadSrc = string | GfxTextureData;\n\ntype SpriteData = {\n\ttex: GfxTexture,\n\tframes: Quad[],\n\tanims: Record<string, SpriteAnim>,\n};\n\ntype SoundData = AudioBuffer;\ntype FontData = GfxFont;\ntype ShaderData = GfxProgram;\n\ntype AssetsConf = {\n\terrHandler?: (err: string) => void,\n};\n\ntype Assets = {\n\tloadRoot: (path: string) => string,\n\tloadSprite: (\n\t\tname: string,\n\t\tsrc: SpriteLoadSrc,\n\t\tconf?: SpriteLoadConf,\n\t) => Promise<SpriteData>,\n\tloadSound: (\n\t\tname: string,\n\t\tsrc: string,\n\t) => Promise<SoundData>,\n\tloadFont: (\n\t\tname: string,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars?: string,\n\t) => Promise<FontData>,\n\tloadShader: (\n\t\tname: string,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t) => Promise<ShaderData>,\n\tloadProgress: () => number,\n\taddLoader: <T>(prom: Promise<T>) => void,\n\tdefFont: () => FontData,\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype AssetsCtx = {\n\tlastLoaderID: number,\n\tloadRoot: string,\n\tloaders: Record<number, boolean>,\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst DEF_FONT = \"unscii\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject();\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gconf: AssetsConf = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction addLoader<T>(prom: Promise<T>) {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\tprom\n\t\t\t.catch(gconf.errHandler ?? console.error)\n\t\t\t.finally(() => {\n\t\t\t\tassets.loaders[id] = true;\n\t\t\t});\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path: string): string {\n\t\tif (path) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// load a bitmap font to asset manager\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string = ASCII_CHARS,\n\t): Promise<FontData> {\n\n\t\tconst loader = new Promise<FontData>((resolve, reject) => {\n\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img), gw, gh, chars);\n\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\treject(`failed to load font '${name}' from '${src}'`);\n\t\t\t\t})\n\t\t\t\t;\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\t// TODO: use getSprite() functions for async settings\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string,\n\t\tsrc: SpriteLoadSrc,\n\t\tconf: SpriteLoadConf = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string,\n\t\t\tsrc: GfxTextureData,\n\t\t\tconf: SpriteLoadConf = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst frames = [];\n\t\t\tconst tex = gfx.makeTex(src);\n\t\t\tconst sliceX = conf.sliceX || 1;\n\t\t\tconst sliceY = conf.sliceY || 1;\n\t\t\tconst qw = 1 / sliceX;\n\t\t\tconst qh = 1 / sliceY;\n\n\t\t\tfor (let j = 0; j < sliceY; j++) {\n\t\t\t\tfor (let i = 0; i < sliceX; i++) {\n\t\t\t\t\tframes.push(quad(\n\t\t\t\t\t\ti * qw,\n\t\t\t\t\t\tj * qh,\n\t\t\t\t\t\tqw,\n\t\t\t\t\t\tqh,\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: conf.anims || {},\n\t\t\t};\n\n\t\t\tassets.sprites[name] = sprite;\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\tconst loader = new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treject(`failed to load sprite '${name}' from '${src}'`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => {\n\t\t\t\t\t\tresolve(loadRawSprite(name, img, conf));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\treject(`failed to load sprite '${name}' from '${src}'`);\n\t\t\t\t\t})\n\t\t\t\t\t;\n\n\t\t\t\treturn;\n\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, conf));\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeProgram(vert, frag);\n\t\t\tassets.shaders[name] = shader;\n\t\t\treturn shader;\n\t\t}\n\n\t\tconst loader = new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to fetch ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst loader = new Promise<SoundData>((resolve, reject) => {\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\n\t\t\t\tfetch(assets.loadRoot + src)\n\t\t\t\t\t.then((res) => res.arrayBuffer())\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx().decodeAudioData(data, (buf: AudioBuffer) => {\n\t\t\t\t\t\t\t\tresolve2(buf);\n\t\t\t\t\t\t\t}, () => {\n\t\t\t\t\t\t\t\treject2();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tassets.sounds[name] = buf;\n\t\t\t\t\t\tresolve(buf);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\treject(`failed to load sound '${name}' from '${src}'`);\n\t\t\t\t\t})\n\t\t\t\t\t;\n\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\tfunction defFont(): FontData {\n\t\treturn assets.fonts[DEF_FONT];\n\t}\n\n\t// default font unscii http://pelulamu.net/unscii/\n\tloadFont(\n\t\tDEF_FONT,\n\t\tunsciiSrc,\n\t\t8,\n\t\t8\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\taddLoader,\n\t\tdefFont,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssets,\n\tSpriteLoadSrc,\n\tSpriteLoadConf,\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tassetsInit,\n\tDEF_FONT,\n};\n", "import {\n\tvec2,\n\trgba,\n\tmap,\n} from \"./math\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerConf = {\n\tmax?: number,\n};\n\ntype Logger = {\n\tdraw: () => void,\n\tinfo: (msg: string) => void,\n\terror: (msg: string) => void,\n\tclear: () => void,\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, conf: LoggerConf = {\n\tmax: 8,\n}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = conf.max ?? 8;\n\n\t// TODO: make log and progress bar fixed size independent of global scale\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst alpha = map(i, 0, max, 1, 0.2);\n\t\t\tconst alpha2 = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgba(1, 1, 1, alpha);\n\t\t\t\t\tcase \"error\": return rgba(1, 0, 0.5, alpha);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText(log.msg, assets.defFont(), {\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tz: 1,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t});\n\n\t\t\tgfx.drawRect(pos, ftext.width, ftext.height, {\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgba(0, 0, 0, alpha2),\n\t\t\t\tz: 1,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tconsole.error(msg);\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tconsole.log(msg);\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n", "type MsgHandler = (data: any, id: number) => void;\n\ntype Net = {\n\tconnect: () => Promise<WebSocket>,\n\tclose: () => void,\n\tconnected: () => boolean,\n\trecv: (type: string, handler: MsgHandler) => void,\n\tsend: (type: string, data: any) => void,\n};\n\nfunction netInit(url: string): Net {\n\n\tconst handlers: Record<string, MsgHandler[]> = {};\n\tconst sendQueue: string[] = [];\n\n\tlet socket: WebSocket | null = null;\n\n\tfunction connected(): boolean {\n\t\treturn socket !== null && socket.readyState === 1;\n\t}\n\n\tfunction connect(): Promise<WebSocket> {\n\n\t\tconst ws = new WebSocket(url);\n\n\t\treturn new Promise<WebSocket>((resolve, reject) => {\n\n\t\t\tws.onopen = () => {\n\t\t\t\tresolve(ws);\n\t\t\t\tsocket = ws;\n\t\t\t\tfor (const msg of sendQueue) {\n\t\t\t\t\tws.send(msg);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tws.onerror = () => {\n\t\t\t\treject(`failed to connect to ${url}`)\n\t\t\t};\n\n\t\t\tws.onmessage = (e) => {\n\t\t\t\tconst msg = JSON.parse(e.data);\n\t\t\t\tif (handlers[msg.type]) {\n\t\t\t\t\tfor (const handler of handlers[msg.type]) {\n\t\t\t\t\t\thandler(msg.data, msg.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t});\n\n\t}\n\n\tfunction recv(type: string, handler: MsgHandler) {\n\t\tif (!handlers[type]) {\n\t\t\thandlers[type] = [];\n\t\t}\n\t\thandlers[type].push(handler);\n\t}\n\n\tfunction send(type: string, data: any) {\n\t\tconst msg = JSON.stringify({\n\t\t\ttype: type,\n\t\t\tdata: data,\n\t\t});\n\t\tif (socket) {\n\t\t\tsocket.send(msg);\n\t\t} else {\n\t\t\tsendQueue.push(msg)\n\t\t}\n\t}\n\n\tfunction close() {\n\t\tif (socket) {\n\t\t\tsocket.close();\n\t\t}\n\t}\n\n\treturn {\n\t\tconnect,\n\t\tclose,\n\t\tconnected,\n\t\trecv,\n\t\tsend,\n\t};\n\n}\n\nexport {\n\tMsgHandler,\n\tNet,\n\tnetInit,\n};\n", "import {\n\tVec2,\n\tVec3,\n\tMat4,\n\tQuad,\n\tColor,\n\tvec2,\n\tmat4,\n\tquad,\n\trgba,\n\trgb,\n\tmakeRng,\n\trand,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\twave,\n\tcolRectRect,\n\toverlapRectRect,\n\tcolRectPt,\n\tvec2FromAngle,\n} from \"./math\";\n\nimport {\n\tOrigin,\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\tAudioPlayConf,\n\tAudioPlay,\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tSpriteData,\n\tassetsInit,\n\tDEF_FONT,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tMsgHandler,\n\tNet,\n\tnetInit,\n} from \"./net\";\n\nimport KaboomCtx from \"./ctx\";\n\ntype KaboomPlugin = (k: KaboomCtx) => Record<string, any>;\n\ntype KaboomConf = {\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\tfullscreen?: boolean,\n\tdebug?: boolean,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n\tclearColor?: number[],\n\tlogMax?: number,\n\tconnect?: string,\n\tglobal?: boolean,\n\tplugins?: Array<KaboomPlugin>,\n};\n\nmodule.exports = (gconf: KaboomConf = {\n\twidth: 640,\n\theight: 480,\n\tscale: 1,\n\tfullscreen: false,\n\tdebug: false,\n\tcrisp: false,\n\tcanvas: null,\n\tconnect: null,\n\tlogMax: 8,\n\troot: document.body,\n}): KaboomCtx => {\n\nconst app = appInit({\n\twidth: gconf.width,\n\theight: gconf.height,\n\tscale: gconf.scale,\n\tfullscreen: gconf.fullscreen,\n\tcrisp: gconf.crisp,\n\tcanvas: gconf.canvas,\n\troot: gconf.root,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tclearColor: ((c) => rgba(c[0], c[1], c[2], c[3]))(gconf.clearColor ?? [0, 0, 0, 1]),\n\tscale: gconf.scale,\n});\n\nconst audio = audioInit();\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gconf.logMax,\n});\n\nconst net: Net | null = (() => {\n\tif (gconf.connect) {\n\t\treturn netInit(gconf.connect);\n\t}\n\treturn null;\n})();\n\nfunction recv(type: string, handler: MsgHandler) {\n\tif (!net) {\n\t\tthrow new Error(\"not connected to any websockets\");\n\t}\n\tnet.recv(type, (data: any, id: number) => {\n\t\ttry {\n\t\t\thandler(data, id);\n\t\t} catch (err) {\n\t\t\tlogger.error(err);\n\t\t}\n\t});\n}\n\nfunction send(type: string, data: any) {\n\tif (!net) {\n\t\tthrow new Error(\"not connected to any websockets\");\n\t}\n\tnet.send(type, data);\n}\n\nfunction play(id: string, conf: AudioPlayConf = {}): AudioPlay {\n\tconst sound = assets.sounds[id];\n\tif (!sound) {\n\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t}\n\treturn audio.play(sound, conf);\n}\n\n// check input state last frame\nfunction mousePos(layer?: string): Vec2 {\n\tconst scene = curScene();\n\tif (!layer) {\n\t\treturn app.mousePos();\n\t} else {\n\t\treturn scene.cam.ignore.includes(layer) ? mousePos() : scene.cam.mpos;\n\t}\n}\n\ntype DrawSpriteConf = {\n\tframe?: number,\n\tpos?: Vec2,\n\tscale?: Vec2 | number,\n\trot?: number,\n\tcolor?: Color,\n\torigin?: Origin,\n\tquad?: Quad,\n\tz?: number,\n};\n\nfunction drawSprite(\n\tid: string | SpriteData,\n\tconf: DrawSpriteConf = {},\n) {\n\tconst spr = (() => {\n\t\tif (typeof id === \"string\") {\n\t\t\treturn assets.sprites[id];\n\t\t} else {\n\t\t\treturn id;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t}\n\tconst q = spr.frames[conf.frame ?? 0];\n\tgfx.drawTexture(spr.tex, {\n\t\t...conf,\n\t\tquad: q,\n\t});\n}\n\nfunction drawText(\n\ttxt: string,\n\tconf = {},\n) {\n\tconst fid = conf.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText(txt, font, conf);\n}\n\n// TODO: comp registry?\n// TODO: comps assert required other comps\n// TODO: in-source doc on the component system\n\nconst DEF_GRAVITY = 980;\nconst DEF_ORIGIN = \"topleft\";\n\ntype Comp = any;\n\ntype GameObj = {\n\thidden: boolean,\n\tpaused: boolean,\n\texists: () => boolean,\n\tis: (tag: string | string[]) => boolean,\n\tuse: (comp: Comp) => void,\n\taction: (cb: () => void) => void,\n\ton: (ev: string, cb: () => void) => void,\n\ttrigger: (ev: string, ...args: any[]) => void,\n\trmTag: (t: string) => void,\n\t_sceneID: number | null,\n\t_tags: string[],\n\t_events: {\n\t\tadd: (() => void)[],\n\t\tupdate: (() => void)[],\n\t\tdraw: (() => void)[],\n\t\tdestroy: (() => void)[],\n\t\tinspect: (() => {})[],\n\t},\n};\ntype Game = {\n\tloaded: boolean,\n\tscenes: Record<string, Scene>,\n\tcurScene: string | null,\n\tnextScene: SceneSwitch | null,\n};\n\ntype SceneSwitch = {\n\tname: string,\n\targs: any[],\n};\n\ntype Timer = {\n\ttime: number,\n\tcb: () => void,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n\tignore: string[],\n\tmpos: Vec2,\n\tmatrix: Mat4,\n};\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyInputEvent = {\n\tkey: string,\n\tcb: () => void,\n};\n\ntype MouseInputEvent = {\n\tcb: () => void,\n};\n\ntype CharInputEvent = {\n\tcb: (ch: string) => void,\n};\n\ntype Scene = {\n\tinit: (...args) => void,\n\tinitialized: boolean,\n\tevents: {\n\t\tadd: TaggedEvent[],\n\t\tupdate: TaggedEvent[],\n\t\tdraw: TaggedEvent[],\n\t\tdestroy: TaggedEvent[],\n\t\tkeyDown: KeyInputEvent[],\n\t\tkeyPress: KeyInputEvent[],\n\t\tkeyPressRep: KeyInputEvent[],\n\t\tkeyRelease: KeyInputEvent[],\n\t\tmouseClick: MouseInputEvent[],\n\t\tmouseRelease: MouseInputEvent[],\n\t\tmouseDown: MouseInputEvent[],\n\t\tcharInput: CharInputEvent[],\n\t},\n\taction: Array<() => void>,\n\trender: Array<() => void>,\n\tobjs: Map<number, GameObj>,\n\tlastID: number,\n\ttimers: Record<number, Timer>,\n\tlastTimerID: number,\n\tcam: Camera,\n\tgravity: number,\n\tlayers: Record<string, number>,\n\tdefLayer: string | null,\n\tdata: any,\n};\n\nconst game: Game = {\n\tloaded: false,\n\tscenes: {},\n\tcurScene: null,\n\tnextScene: null,\n};\n\n// start describing a scene (this should be called before start())\nfunction scene(name: string, cb: (...args) => void) {\n\n\tgame.scenes[name] = {\n\n\t\tinit: cb,\n\t\tinitialized: false,\n\n\t\t// event callbacks\n\t\tevents: {\n\t\t\tadd: [],\n\t\t\tupdate: [],\n\t\t\tdraw: [],\n\t\t\tdestroy: [],\n\t\t\tkeyDown: [],\n\t\t\tkeyPress: [],\n\t\t\tkeyPressRep: [],\n\t\t\tkeyRelease: [],\n\t\t\tmouseClick: [],\n\t\t\tmouseRelease: [],\n\t\t\tmouseDown: [],\n\t\t\tcharInput: [],\n\t\t},\n\n\t\taction: [],\n\t\trender: [],\n\n\t\t// in game pool\n\t\tobjs: new Map(),\n\t\tlastID: 0,\n\t\ttimers: {},\n\t\tlastTimerID: 0,\n\n\t\t// cam\n\t\tcam: {\n\t\t\tpos: vec2(gfx.width() / 2, gfx.height() / 2),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\tignore: [],\n\t\t\tmpos: vec2(0),\n\t\t\tmatrix: mat4(),\n\t\t},\n\n\t\t// misc\n\t\tlayers: {},\n\t\tdefLayer: null,\n\t\tgravity: DEF_GRAVITY,\n\t\tdata: {},\n\n\t};\n\n}\n\nfunction curScene(): Scene {\n\treturn game.scenes[game.curScene];\n}\n\n// custom data kv store for scene\nfunction sceneData(): any {\n\treturn curScene().data;\n}\n\n// register inputs for controlling debug features\nfunction regDebugInputs() {\n\n\tkeyPress(\"`\", () => {\n\t\tdebug.showLog = !debug.showLog;\n\t\tlogger.info(`show log: ${debug.showLog ? \"on\" : \"off\"}`);\n\t});\n\n\tkeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t\tlogger.info(`inspect: ${debug.inspect ? \"on\" : \"off\"}`);\n\t});\n\n\tkeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tkeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t\tlogger.info(`${debug.paused ? \"paused\" : \"unpaused\"}`);\n\t});\n\n\tkeyPress(\"f7\", () => {\n\t\tdebug.timeScale = clamp(debug.timeScale - 0.2, 0, 2);\n\t\tlogger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n\t});\n\n\tkeyPress(\"f9\", () => {\n\t\tdebug.timeScale = clamp(debug.timeScale + 0.2, 0, 2);\n\t\tlogger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n\t});\n\n\tkeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t\tlogger.info(`stepped frame`);\n\t});\n\n}\n\n// schedule to switch to a scene\nfunction go(name: string, ...args) {\n\tgame.nextScene = {\n\t\tname: name,\n\t\targs: [...args],\n\t};\n}\n\nfunction goSync(name: string, ...args: any[]) {\n\treload(name);\n\tgame.curScene = name;\n\tconst scene = game.scenes[name];\n\tif (!scene) {\n\t\tthrow new Error(`scene not found: '${name}'`);\n\t}\n\tif (!scene.initialized) {\n\t\ttry {\n\t\t\tscene.init(...args);\n\t\t} catch (e) {\n\t\t\tlogger.error(e.stack);\n\t\t}\n\t\tif (gconf.debug) {\n\t\t\tregDebugInputs();\n\t\t}\n\t\tscene.initialized = true;\n\t}\n}\n\n// reload a scene, reset all objs to their init states\nfunction reload(name: string) {\n\tif (!game.scenes[name]) {\n\t\tthrow new Error(`scene not found: '${name}'`);\n\t}\n\tscene(name, game.scenes[name].init);\n}\n\nfunction layers(list: string[], def?: string) {\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\treturn;\n\t}\n\n\tconst each = 0.5 / list.length;\n\n\tlist.forEach((name, i) => {\n\t\tscene.layers[name] = 0.5 + each * i;\n\t});\n\n\tif (def) {\n\t\tscene.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tconst cam = curScene().cam;\n\tif (pos.length > 0) {\n\t\tcam.pos = vec2(...pos);\n\t}\n\treturn cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tconst cam = curScene().cam;\n\tif (scale.length > 0) {\n\t\tcam.scale = vec2(...scale);\n\t}\n\treturn cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tconst cam = curScene().cam;\n\tif (angle !== undefined) {\n\t\tcam.angle = angle;\n\t}\n\treturn cam.angle;\n}\n\nfunction camShake(intensity: number) {\n\tconst cam = curScene().cam;\n\tcam.shake = intensity;\n}\n\nfunction camIgnore(layers: string[]) {\n\tconst cam = curScene().cam;\n\tcam.ignore = layers;\n}\n\n//  type CompDef = {\n//  \tid: string,\n//  \trequire: string[],\n//  \tdef: () => Comp,\n//  };\n\n//  const compReg: Record<string, CompDef> = {};\n\n//  function defComp(id: string, require: string[], def: () => Comp) {\n//  \tif (compReg[id]) {\n//  \t\tthrow new Error(`comp already exists: ${id}`);\n//  \t}\n//  \tcompReg[id] = {\n//  \t\tid: id,\n//  \t\trequire,\n//  \t\tdef,\n//  \t};\n//  }\n\nfunction add(comps: Comp[]): GameObj {\n\n\tconst obj: GameObj = {\n\n\t\thidden: false,\n\t\tpaused: false,\n\t\t_tags: [],\n\t\t_sceneID: null,\n\n\t\t_events: {\n\t\t\tadd: [],\n\t\t\tupdate: [],\n\t\t\tdraw: [],\n\t\t\tdestroy: [],\n\t\t\tinspect: [],\n\t\t},\n\n\t\t// use a comp\n\t\tuse(comp: Comp) {\n\n\t\t\tif (comp === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = typeof comp;\n\n\t\t\t// tags\n\t\t\tif (type === \"string\") {\n\t\t\t\tthis._tags.push(comp);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type !== \"object\") {\n\t\t\t\tthrow new Error(`invalid comp type: ${type}`);\n\t\t\t}\n\n\t\t\t// multi comps\n\t\t\tif (Array.isArray(comp)) {\n\t\t\t\tfor (const c of comp) {\n\t\t\t\t\tthis.use(c);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tif (this._events[k]) {\n\t\t\t\t\t\tthis._events[k].push(comp[k].bind(this));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[k] = comp[k].bind(this);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: deal with getter / setters\n\t\t\t\t// fields\n\t\t\t\tthis[k] = comp[k];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// if obj is current in scene\n\t\texists() {\n\t\t\treturn this._sceneID !== undefined;\n\t\t},\n\n\t\t// if obj has certain tag\n\t\tis(tag) {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this._tags.includes(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this._tags.includes(tag);\n\t\t},\n\n\t\ton(event, cb) {\n\t\t\tif (!this._events[event]) {\n\t\t\t\tthis._events[event] = [];\n\t\t\t}\n\t\t\tthis._events[event].push(cb);\n\t\t},\n\n\t\taction(cb) {\n\t\t\tthis.on(\"update\", cb);\n\t\t},\n\n\t\ttrigger(event, ...args) {\n\n\t\t\tif (this._events[event]) {\n\t\t\t\tfor (const f of this._events[event]) {\n\t\t\t\t\tf.call(this, ...args);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst scene = curScene();\n\t\t\tconst events = scene.events[event];\n\n\t\t\tif (events) {\n\t\t\t\tfor (const ev of events) {\n\t\t\t\t\tif (this.is(ev.tag)) {\n\t\t\t\t\t\tev.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\trmTag(t) {\n\t\t\tconst idx = this._tags.indexOf(t);\n\t\t\tif (idx > -1) {\n\t\t\t\tthis._tags.splice(idx, 1);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tobj.use(comps);\n\n\tconst scene = curScene();\n\n\tscene.objs.set(scene.lastID, obj);\n\tobj._sceneID = scene.lastID;\n\tscene.lastID++;\n\n\tobj.trigger(\"add\");\n\n\tfor (const e of scene.events.add) {\n\t\tif (obj.is(e.tag)) {\n\t\t\te.cb(obj);\n\t\t}\n\t}\n\n\treturn obj;\n\n}\n\nfunction readd(obj: GameObj): GameObj {\n\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\n\tconst scene = curScene();\n\n\tscene.objs.delete(obj._sceneID);\n\tscene.objs.set(scene.lastID, obj);\n\tobj._sceneID = scene.lastID;\n\tscene.lastID++;\n\n\treturn obj;\n\n}\n\n// add an event to a tag\nfunction on(event: string, tag: string, cb: (obj: GameObj) => void) {\n\tconst scene = curScene();\n\tif (!scene.events[event]) {\n\t\tscene.events[event] = [];\n\t}\n\tscene.events[event].push({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// add update event to a tag or global update\nfunction action(tag: string | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tcurScene().action.push(tag);\n\t} else if (typeof tag === \"string\") {\n\t\ton(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction render(tag: string | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tcurScene().render.push(tag);\n\t} else if (typeof tag === \"string\") {\n\t\ton(\"update\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction collides(\n\tt1: string,\n\tt2: string,\n\tf: (a: GameObj, b: GameObj) => void,\n) {\n\taction(t1, (o1) => {\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n}\n\n// add an event that runs with objs with t1 overlaps with objs with t2\nfunction overlaps(\n\tt1: string,\n\tt2: string,\n\tf: (a: GameObj, b: GameObj) => void,\n) {\n\taction(t1, (o1) => {\n\t\to1._checkOverlaps(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction clicks(t: string, f: (obj: GameObj) => void) {\n\taction(t, (o) => {\n\t\tif (o.isClicked()) {\n\t\t\tf(o);\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<null> {\n\treturn new Promise((resolve) => {\n\t\tconst scene = curScene();\n\t\tscene.timers[scene.lastTimerID++] = {\n\t\t\ttime: t,\n\t\t\tcb: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve(null);\n\t\t\t},\n\t\t};\n\t});\n}\n\ntype LoopHandle = {\n\tstop: () => void,\n};\n\n// TODO: return control handle\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): LoopHandle {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn {\n\t\tstop() {\n\t\t\tstopped = true;\n\t\t},\n\t};\n\n}\n\nfunction pushKeyEvent(e: string, k: string, f: () => void) {\n\tif (Array.isArray(k)) {\n\t\tfor (const key of k) {\n\t\t\tpushKeyEvent(e, key, f);\n\t\t}\n\t} else {\n\t\tconst scene = curScene();\n\t\tscene.events[e].push({\n\t\t\tkey: k,\n\t\t\tcb: f,\n\t\t});\n\t}\n}\n\n// input callbacks\nfunction keyDown(k: string, f: () => void) {\n\tpushKeyEvent(\"keyDown\", k, f);\n}\n\nfunction keyPress(k: string, f: () => void) {\n\tpushKeyEvent(\"keyPress\", k, f);\n}\n\nfunction keyPressRep(k: string, f: () => void) {\n\tpushKeyEvent(\"keyPressRep\", k, f);\n}\n\nfunction keyRelease(k: string, f: () => void) {\n\tpushKeyEvent(\"keyRelease\", k, f);\n}\n\nfunction charInput(f: (ch: string) => void) {\n\tconst scene = curScene();\n\tscene.events.charInput.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseDown(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseDown.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseClick(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseClick.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseRelease(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseRelease.push({\n\t\tcb: f,\n\t});\n}\n\n// get all objects with tag\nfunction get(t?: string): GameObj[] {\n\n\tconst scene = curScene();\n\tconst objs = [...scene.objs.values()];\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in scene with tag t\nfunction every(t: string | ((obj: GameObj) => void), f?: (obj: GameObj) => void) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\tget().forEach(t);\n\t} else if (typeof t === \"string\") {\n\t\tget(t).forEach(f);\n\t}\n}\n\n// every but in reverse order\nfunction revery(t: string | ((obj: GameObj) => void), f?: (obj: GameObj) => void) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\tget().reverse().forEach(t);\n\t} else if (typeof t === \"string\") {\n\t\tget(t).reverse().forEach(f);\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\treturn;\n\t}\n\n\tobj.trigger(\"destroy\");\n\tscene.objs.delete(obj._sceneID);\n\tdelete obj._sceneID;\n\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, (obj) => {\n\t\tdestroy(obj);\n\t});\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tconst scene = curScene();\n\tif (g !== undefined) {\n\t\tscene.gravity = g;\n\t}\n\treturn scene.gravity;\n}\n\n// TODO: cleaner pause logic\nfunction gameFrame(ignorePause?: boolean) {\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\tthrow new Error(`scene not found: '${game.curScene}'`);\n\t}\n\n\tconst doUpdate = ignorePause || !debug.paused;\n\n\tif (doUpdate) {\n\t\t// update timers\n\t\tfor (const id in scene.timers) {\n\t\t\tconst t = scene.timers[id];\n\t\t\tt.time -= app.dt();\n\t\t\tif (t.time <= 0) {\n\t\t\t\tt.cb();\n\t\t\t\tdelete scene.timers[id];\n\t\t\t}\n\t\t}\n\t}\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused && doUpdate) {\n\t\t\tobj.trigger(\"update\");\n\t\t}\n\t});\n\n\tif (doUpdate) {\n\t\tfor (const f of scene.action) {\n\t\t\tf();\n\t\t}\n\t}\n\n\t// calculate camera matrix\n\tconst size = vec2(gfx.width(), gfx.height());\n\tconst cam = scene.cam;\n\tconst shake = vec2FromAngle(rand(0, Math.PI * 2)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * app.dt());\n\tcam.matrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\tcam.mpos = cam.matrix.invert().multVec2(mousePos());\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (!cam.ignore.includes(obj.layer)) {\n\t\t\t\tgfx.pushMatrix(cam.matrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n\tfor (const f of scene.render) {\n\t\tf();\n\t}\n\n}\n\nfunction handleEvents() {\n\n\tconst scene = curScene();\n\n\tfor (const e of scene.events.charInput) {\n\t\tapp.charInputted().forEach(e.cb);\n\t}\n\n\t// run input checks & callbacks\n\tfor (const e of scene.events.keyDown) {\n\t\tif (app.keyDown(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyPress) {\n\t\tif (app.keyPressed(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyPressRep) {\n\t\tif (app.keyPressedRep(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyRelease) {\n\t\tif (app.keyReleased(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseDown) {\n\t\tif (app.mouseDown()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseClick) {\n\t\tif (app.mouseClicked()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseRelease) {\n\t\tif (app.mouseReleased()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n}\n\nfunction drawInspect() {\n\n\tevery((obj) => {\n\n\t\tif (!obj.area) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (obj.hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.pushTransform();\n\n\t\tconst scene = curScene();\n\n\t\tif (!scene.cam.ignore.includes(obj.layer)) {\n\t\t\tgfx.pushMatrix(scene.cam.matrix);\n\t\t}\n\n\t\tconst font = assets.defFont();\n\t\tconst color = rgba(0, 1, 1, 1);\n\t\tconst hovered = obj.isHovered();\n\t\tconst width = (hovered ? 4 : 2) / gfx.scale();\n\t\tconst a = obj._worldArea();\n\t\tconst w = a.p2.x - a.p1.x;\n\t\tconst h = a.p2.y - a.p1.y;\n\n\t\tgfx.drawRectStroke(a.p1, w, h, {\n\t\t\twidth: width,\n\t\t\tcolor: color,\n\t\t\tz: 0.9,\n\t\t});\n\n\t\tif (hovered) {\n\n\t\t\tconst mpos = mousePos(obj.layer ?? scene.defLayer);\n\t\t\tconst padding = vec2(6, 6).scale(1 / gfx.scale());\n\t\t\tlet bw = 0;\n\t\t\tlet bh = 0;\n\t\t\tconst lines = [];\n\n\t\t\tconst addLine = (txt) => {\n\t\t\t\tconst ftxt = gfx.fmtText(txt, font, {\n\t\t\t\t\tsize: 12 / (gconf.scale ?? 1),\n\t\t\t\t\tpos: mpos.add(vec2(padding.x, padding.y + bh)),\n\t\t\t\t\tz: 1,\n\t\t\t\t});\n\t\t\t\tlines.push(ftxt);\n\t\t\t\tbw = ftxt.width > bw ? ftxt.width : bw;\n\t\t\t\tbh += ftxt.height;\n\t\t\t};\n\n\t\t\tfor (const tag of obj._tags) {\n\t\t\t\taddLine(`\"${tag}\"`);\n\t\t\t}\n\n\t\t\tfor (const inspect of obj._events.inspect) {\n\n\t\t\t\tconst info = inspect();\n\n\t\t\t\tfor (const field in info) {\n\t\t\t\t\taddLine(`${field}: ${info[field]}`);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbw += padding.x * 2;\n\t\t\tbh += padding.y * 2;\n\n\t\t\t// background\n\t\t\tgfx.drawRect(mpos, bw, bh, {\n\t\t\t\tcolor: rgba(0, 0, 0, 1),\n\t\t\t\tz: 1,\n\t\t\t});\n\n\t\t\tfor (const line of lines) {\n\t\t\t\tgfx.drawFmtText(line);\n\t\t\t}\n\n\t\t}\n\n\t\tgfx.popTransform();\n\n\t});\n\n}\n\n// TODO: put main event loop in app module\n// start the game with a scene\nfunction start(name: string, ...args: any[]) {\n\n\tapp.run(() => {\n\n\t\tgfx.frameStart();\n\n\t\tif (!game.loaded) {\n\n\t\t\t// if assets are not fully loaded, draw a progress bar\n\n\t\t\tconst progress = assets.loadProgress();\n\n\t\t\tif (progress === 1) {\n\t\t\t\tgame.loaded = true;\n\t\t\t\tgoSync(name, ...args);\n\t\t\t\tif (net) {\n\t\t\t\t\tnet.connect().catch(logger.error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst w = gfx.width() / 2;\n\t\t\t\tconst h = 12;\n\t\t\t\tconst pos = vec2(gfx.width() / 2, gfx.height() / 2).sub(vec2(w / 2, h / 2));\n\t\t\t\tgfx.drawRectStroke(pos, w, h, { width: 2, });\n\t\t\t\tgfx.drawRect(pos, w * progress, h);\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttry {\n\n\t\t\t\tif (!curScene()) {\n\t\t\t\t\tthrow new Error(`scene not found: '${game.curScene}'`);\n\t\t\t\t}\n\n\t\t\t\thandleEvents();\n\t\t\t\tgameFrame();\n\n\t\t\t\tif (debug.inspect) {\n\t\t\t\t\tdrawInspect();\n\t\t\t\t}\n\n\t\t\t} catch (e) {\n\n\t\t\t\tlogger.error(e.stack);\n\t\t\t\tapp.quit();\n\n\t\t\t}\n\n\t\t\tif (debug.showLog) {\n\t\t\t\tlogger.draw();\n\t\t\t}\n\n\t\t\tif (game.nextScene) {\n\t\t\t\tgoSync.apply(null, [ game.nextScene.name, ...game.nextScene.args, ]);\n\t\t\t\tgame.nextScene = null;\n\t\t\t}\n\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t});\n\n}\n\ntype AddEvent = () => void;\ntype DrawEvent = () => void;\ntype UpdateEvent = () => void;\ntype DestroyEvent = () => void;\n\ntype PosCompInspect = {\n\tpos: string,\n};\n\ntype PosComp = {\n\tpos: Vec2,\n\tmove: (...args) => void,\n\tinspect: () => PosCompInspect,\n};\n\n// TODO: have velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tpos: vec2(...args),\n\n\t\tmove(...args) {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tconst dx = p.x * app.dt();\n\t\t\tconst dy = p.y * app.dt();\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn {\n\t\t\t\tpos: `(${~~this.pos.x}, ${~~this.pos.y})`,\n\t\t\t};\n\t\t},\n\n\t};\n\n}\n\n// TODO: allow single number assignment\nfunction scale(...args) {\n\treturn {\n\t\tscale: vec2(...args),\n\t\tflipX(s) {\n\t\t\tthis.scale.x = Math.sign(s) * Math.abs(this.scale.x);\n\t\t},\n\t\tflipY(s) {\n\t\t\tthis.scale.y = Math.sign(s) * Math.abs(this.scale.y);\n\t\t},\n\t};\n}\n\nfunction rotate(r) {\n\treturn {\n\t\tangle: r,\n\t};\n}\n\nfunction color(...args) {\n\treturn {\n\t\tcolor: rgba(...args),\n\t};\n}\n\nfunction origin(o) {\n\treturn {\n\t\torigin: o,\n\t};\n}\n\nfunction layer(z) {\n\treturn {\n\t\tlayer: z,\n\t\tinspect() {\n\t\t\tconst scene = curScene();\n\t\t\treturn {\n\t\t\t\tlayer: this.layer ?? scene.defLayer,\n\t\t\t};\n\t\t},\n\t};\n}\n\ntype RectSide =\n\t\"top\"\n\t| \"bottom\"\n\t| \"left\"\n\t| \"right\"\n\t;\n\ntype CollisionResolve = {\n\tobj: GameObj,\n\tside: RectSide,\n}\n\ntype AreaComp = {\n\tarea: {\n\t\tp1: Vec2,\n\t\tp2: Vec2,\n\t},\n\tdraw: DrawEvent,\n\tareaWidth: () => number,\n\tareaHeight: () => number,\n\tisClicked: () => boolean,\n\tisHovered: () => boolean,\n\tisCollided: (o: GameObj) => boolean,\n\tisOverlapped: (o: GameObj) => boolean,\n\tclicks: (f: () => void) => void,\n\thovers: (f: () => void) => void,\n\tcollides: (tag: string, f: (o: GameObj) => void) => void,\n\toverlaps: (tag: string, f: (o: GameObj) => void) => void,\n\thasPt: (p: Vec2) => boolean,\n\tresolve: () => void,\n};\n\nfunction isSameLayer(o1: GameObj, o2: GameObj): boolean {\n\tconst scene = curScene();\n\treturn (o1.layer ?? scene.defLayer) === (o2.layer ?? scene.defLayer);\n}\n\n// TODO: active flag\n// TODO: tell which size collides\n// TODO: dynamic update when size change\nfunction area(p1: Vec2, p2: Vec2): AreaComp {\n\n\tconst colliding = {};\n\tconst overlapping = {};\n\n\treturn {\n\n\t\tarea: {\n\t\t\tp1: p1,\n\t\t\tp2: p2,\n\t\t},\n\n\t\tareaWidth(): number {\n\t\t\tconst { p1, p2 } = this._worldArea();\n\t\t\treturn p2.x - p1.x;\n\t\t},\n\n\t\tareaHeight(): number {\n\t\t\tconst { p1, p2 } = this._worldArea();\n\t\t\treturn p2.y - p1.y;\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.mouseClicked() && this.isHovered();\n\t\t},\n\n\t\tisHovered() {\n\t\t\treturn this.hasPt(mousePos(this.layer ?? curScene().defLayer));\n\t\t},\n\n\t\tisCollided(other) {\n\n\t\t\tif (!other.area) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst a1 = this._worldArea();\n\t\t\tconst a2 = other._worldArea();\n\n\t\t\treturn colRectRect(a1, a2);\n\n\t\t},\n\n\t\tisOverlapped(other) {\n\n\t\t\tif (!other.area) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst a1 = this._worldArea();\n\t\t\tconst a2 = other._worldArea();\n\n\t\t\treturn overlapRectRect(a1, a2);\n\n\t\t},\n\n\t\tclicks(f: () => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\thovers(f: () => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tif (this.isHovered()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tcollides(tag: string, f: (o: GameObj) => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tthis._checkCollisions(tag, f);\n\t\t\t});\n\t\t},\n\n\t\toverlaps(tag: string, f: (o: GameObj) => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tthis._checkOverlaps(tag, f);\n\t\t\t});\n\t\t},\n\n\t\thasPt(pt: Vec2): boolean {\n\t\t\tconst a = this._worldArea();\n\t\t\treturn colRectPt({\n\t\t\t\tp1: a.p1,\n\t\t\t\tp2: a.p2,\n\t\t\t}, pt);\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tresolve(): CollisionResolve[] {\n\n\t\t\tconst targets: CollisionResolve[] = [];\n\n\t\t\tevery((other) => {\n\n\t\t\t\tif (other === this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!other.solid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!other.area) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst a1 = this._worldArea();\n\t\t\t\tconst a2 = other._worldArea();\n\n\t\t\t\tif (!colRectRect(a1, a2)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst disLeft = a1.p2.x - a2.p1.x;\n\t\t\t\tconst disRight = a2.p2.x - a1.p1.x;\n\t\t\t\tconst disTop = a1.p2.y - a2.p1.y;\n\t\t\t\tconst disBottom = a2.p2.y - a1.p1.y;\n\t\t\t\tconst min = Math.min(disLeft, disRight, disTop, disBottom);\n\n\t\t\t\tconst side = (() => {\n\t\t\t\t\tswitch (min) {\n\t\t\t\t\t\tcase disLeft:\n\t\t\t\t\t\t\tthis.pos.x -= disLeft;\n\t\t\t\t\t\t\treturn \"right\";\n\t\t\t\t\t\tcase disRight:\n\t\t\t\t\t\t\tthis.pos.x += disRight;\n\t\t\t\t\t\t\treturn \"left\";\n\t\t\t\t\t\tcase disTop:\n\t\t\t\t\t\t\tthis.pos.y -= disTop;\n\t\t\t\t\t\t\treturn \"bottom\";\n\t\t\t\t\t\tcase disBottom:\n\t\t\t\t\t\t\tthis.pos.y += disBottom;\n\t\t\t\t\t\t\treturn \"top\";\n\t\t\t\t\t}\n\t\t\t\t})();\n\n\t\t\t\ttargets.push({\n\t\t\t\t\tobj: other,\n\t\t\t\t\tside: side,\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn targets;\n\n\t\t},\n\n\t\t_checkCollisions(tag, f) {\n\n\t\t\tevery(tag, (obj) => {\n\t\t\t\tif (this === obj) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (colliding[obj._sceneID]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isCollided(obj)) {\n\t\t\t\t\tf(obj);\n\t\t\t\t\tcolliding[obj._sceneID] = obj;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isCollided(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: repetitive with collides\n\t\t_checkOverlaps(tag, f) {\n\n\t\t\tevery(tag, (obj) => {\n\t\t\t\tif (this === obj) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (overlapping[obj._sceneID]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isOverlapped(obj)) {\n\t\t\t\t\tf(obj);\n\t\t\t\t\toverlapping[obj._sceneID] = obj;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const id in overlapping) {\n\t\t\t\tconst obj = overlapping[id];\n\t\t\t\tif (!this.isOverlapped(obj)) {\n\t\t\t\t\tdelete overlapping[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\t_worldArea() {\n\n\t\t\tconst a = this.area;\n\t\t\tconst pos = this.pos || vec2(0);\n\t\t\tconst scale = this.scale || vec2(1);\n\t\t\tconst p1 = pos.add(a.p1.dot(scale));\n\t\t\tconst p2 = pos.add(a.p2.dot(scale));\n\n\t\t\tconst area = {\n\t\t\t\tp1: vec2(Math.min(p1.x, p2.x), Math.min(p1.y, p2.y)),\n\t\t\t\tp2: vec2(Math.max(p1.x, p2.x), Math.max(p1.y, p2.y)),\n\t\t\t};\n\n\t\t\treturn area;\n\n\t\t},\n\n\t};\n\n}\n\nfunction getAreaFromSize(w, h, o) {\n\tconst size = vec2(w, h);\n\tconst offset = originPt(o || DEF_ORIGIN).dot(size).scale(-0.5);\n\treturn area(\n\t\toffset.sub(size.scale(0.5)),\n\t\toffset.add(size.scale(0.5)),\n\t);\n}\n\ntype SpriteCompConf = {\n\tnoArea?: boolean,\n\tquad?: Quad,\n\tframe?: number,\n\tanimSpeed?: number,\n};\n\ntype SpriteCompCurAnim = {\n\tname: string,\n\tloop: boolean,\n\ttimer: number,\n};\n\ntype SpriteComp = {\n\tadd: AddEvent,\n\tdraw: DrawEvent,\n\tupdate: UpdateEvent,\n\twidth: number,\n\theight: number,\n\tanimSpeed: number,\n\tframe: number,\n\tquad: Quad,\n\tplay: (anim: string, loop?: boolean) => void,\n\tstop: () => void,\n\tchangeSprite: (id: string) => void,\n\tnumFrames: () => number,\n\tcurAnim: () => string,\n\tinspect: () => SpriteCompInspect,\n};\n\ntype SpriteCompInspect = {\n\tcurAnim?: string,\n};\n\nfunction sprite(id: string, conf: SpriteCompConf = {}): SpriteComp {\n\n\tlet spr = assets.sprites[id];\n\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t}\n\n\tconst q = { ...spr.frames[0] };\n\n\tif (conf.quad) {\n\t\tq.x += conf.quad.x * q.w;\n\t\tq.y += conf.quad.y * q.h;\n\t\tq.w *= conf.quad.w;\n\t\tq.h *= conf.quad.h;\n\t}\n\n\tconst width = spr.tex.width * q.w;\n\tconst height = spr.tex.height * q.h;\n\tlet curAnim: SpriteCompCurAnim | null = null;\n\n\treturn {\n\n\t\twidth: width,\n\t\theight: height,\n\t\tanimSpeed: conf.animSpeed || 0.1,\n\t\tframe: conf.frame || 0,\n\t\tquad: conf.quad || quad(0, 0, 1, 1),\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\t\t\tconst q = spr.frames[this.frame];\n\n\t\t\tdrawSprite(spr, {\n\t\t\t\tpos: this.pos,\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tcolor: this.color,\n\t\t\t\tframe: this.frame,\n\t\t\t\torigin: this.origin,\n\t\t\t\tquad: this.quad,\n\t\t\t\tz: scene.layers[this.layer ?? scene.defLayer],\n\t\t\t});\n\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tcurAnim.timer += app.dt();\n\n\t\t\tif (curAnim.timer >= this.animSpeed) {\n\t\t\t\t// TODO: anim dir\n\t\t\t\tthis.frame++;\n\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurAnim.timer -= this.animSpeed;\n\t\t\t}\n\n\t\t},\n\n\t\tplay(name, loop = true) {\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (!anim) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\tloop: loop,\n\t\t\t\ttimer: 0,\n\t\t\t};\n\n\t\t\tthis.frame = anim.from;\n\t\t\tthis.trigger(\"animPlay\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tchangeSprite(id) {\n\n\t\t\tspr = assets.sprites[id];\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tconst q = { ...spr.frames[0] };\n\n\t\t\tif (conf.quad) {\n\t\t\t\tq.x += conf.quad.x * q.w;\n\t\t\t\tq.y += conf.quad.y * q.h;\n\t\t\t\tq.w *= conf.quad.w;\n\t\t\t\tq.h *= conf.quad.h;\n\t\t\t}\n\n\t\t\tthis.width = spr.tex.width * q.w;\n\t\t\tthis.height = spr.tex.height * q.h;\n\n\t\t\tif (this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\n\t\t\tcurAnim = null;\n\t\t\tthis.frame = 0;\n\n\t\t},\n\n\t\tnumFrames() {\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tinspect(): SpriteCompInspect {\n\t\t\tconst info: SpriteCompInspect = {};\n\t\t\tif (curAnim) {\n\t\t\t\tinfo.curAnim = `\"${curAnim.name}\"`;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t};\n\n}\n\ntype TextComp = {\n\tadd: AddEvent,\n\tdraw: DrawEvent,\n\ttext: string,\n\ttextSize: number,\n\tfont: string,\n\twidth: number,\n\theight: number,\n};\n\ntype TextCompConf = {\n\tnoArea?: boolean,\n\tfont?: string,\n\twidth?: number,\n};\n\n// TODO: add area\nfunction text(t: string, size: number, conf: TextCompConf = {}): TextComp {\n\n\treturn {\n\n\t\ttext: t,\n\t\ttextSize: size,\n\t\tfont: conf.font,\n\t\t// TODO: calc these at init\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tconst scene = curScene();\n\t\t\t\tconst font = assets.fonts[this.font ?? DEF_FONT];\n\t\t\t\tconst ftext = gfx.fmtText(this.text + \"\", font, {\n\t\t\t\t\tpos: this.pos,\n\t\t\t\t\tscale: this.scale,\n\t\t\t\t\trot: this.angle,\n\t\t\t\t\tsize: this.textSize,\n\t\t\t\t\torigin: this.origin,\n\t\t\t\t\tcolor: this.color,\n\t\t\t\t\twidth: conf.width,\n\t\t\t\t\tz: scene.layers[this.layer ?? scene.defLayer],\n\t\t\t\t});\n\t\t\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\t\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\t\t\tconst font = assets.fonts[this.font ?? DEF_FONT];\n\n\t\t\tconst ftext = gfx.fmtText(this.text + \"\", font, {\n\t\t\t\tpos: this.pos,\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tsize: this.textSize,\n\t\t\t\torigin: this.origin,\n\t\t\t\tcolor: this.color,\n\t\t\t\twidth: conf.width,\n\t\t\t\tz: scene.layers[this.layer ?? scene.defLayer],\n\t\t\t});\n\n\t\t\tthis.width = ftext.width;\n\t\t\tthis.height = ftext.height;\n\n\t\t\tgfx.drawFmtText(ftext);\n\n\t\t},\n\n\t};\n\n}\n\ntype RectComp = {\n\tadd: AddEvent,\n\tdraw: DrawEvent,\n\twidth: number,\n\theight: number,\n};\n\ntype RectCompConf = {\n\tnoArea?: boolean,\n};\n\nfunction rect(\n\tw: number,\n\th: number,\n\tconf: RectCompConf = {},\n): RectComp {\n\n\treturn {\n\n\t\twidth: w,\n\t\theight: h,\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\n\t\t\tgfx.drawRect(this.pos, this.width, this.height, {\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tcolor: this.color,\n\t\t\t\torigin: this.origin,\n\t\t\t\tz: scene.layers[this.layer ?? scene.defLayer],\n\t\t\t});\n\n\t\t},\n\n\t};\n\n}\n\ntype SolidComp = {\n\tsolid: boolean,\n};\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tsolid: true,\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_MAX_VEL = 960;\nconst DEF_JUMP_FORCE = 480;\n\ntype BodyComp = {\n\tupdate: UpdateEvent,\n\tjumpForce: number,\n\tcurPlatform: () => GameObj | null,\n\tgrounded: () => boolean,\n\tjump: (f: number) => void,\n};\n\ntype BodyCompConf = {\n\tjumpForce?: number,\n\tmaxVel?: number,\n};\n\nfunction body(conf: BodyCompConf = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tconst maxVel = conf.maxVel ?? DEF_MAX_VEL;\n\n\treturn {\n\n\t\tjumpForce: conf.jumpForce ?? DEF_JUMP_FORCE,\n\n\t\tupdate() {\n\n\t\t\tthis.move(0, velY);\n\n\t\t\tconst targets = this.resolve();\n\t\t\tlet justOff = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\t\t\t\tif (!curPlatform.exists() || !this.isCollided(curPlatform)) {\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tjustOff = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tvelY = Math.min(velY + gravity() * app.dt(), maxVel);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tfor (const target of targets) {\n\t\t\t\t\tif (target.side === \"bottom\" && velY > 0) {\n\t\t\t\t\t\tcurPlatform = target.obj;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (!justOff) {\n\t\t\t\t\t\t\tthis.trigger(\"grounded\", curPlatform);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (target.side === \"top\" && velY < 0) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbump\", target.obj);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t};\n\n}\n\ntype ShaderComp = {\n\tsendVec2: (name: string, p: Vec2) => void,\n\tsendVec3: (name: string, p: Vec3) => void,\n\tsendColor: (name: string, p: Color) => void,\n\tsendMat4: (name: string, m: Mat4) => void,\n};\n\nfunction shader(id: string): ShaderComp {\n\tconst prog = assets.shaders[id];\n\treturn {\n\t\tsendVec2(name: string, p: Vec2) {\n\t\t\tprog.sendVec2(name, p);\n\t\t},\n\t\tsendVec3(name: string, p: Vec3) {\n\t\t\tprog.sendVec3(name, p);\n\t\t},\n\t\tsendColor(name: string, c: Color) {\n\t\t\tprog.sendColor(name, c);\n\t\t},\n\t\tsendMat4(name: string, m: Mat4) {\n\t\t\tprog.sendMat4(name, m);\n\t\t},\n\t};\n}\n\ntype Debug = {\n\tpaused: boolean,\n\tinspect: boolean,\n\ttimeScale: number,\n\tshowLog: boolean,\n\tfps: () => number,\n\tobjCount: () => number,\n\tdrawCalls: () => number,\n\tstepFrame: () => void,\n\tclearLog: () => void,\n\tlog: (msg: string) => void,\n\terror: (msg: string) => void,\n};\n\nconst debug: Debug = {\n\tpaused: false,\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps(): number {\n\t\treturn 1.0 / app.dt();\n\t},\n\tobjCount(): number {\n\t\treturn curScene().objs.size;\n\t},\n\tstepFrame() {\n\t\tgameFrame(true);\n\t},\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: logger.info,\n\terror: logger.error,\n};\n\n\ntype LevelConf = {\n\twidth: number,\n\theight: number,\n\tpos?: Vec2,\n\tany: (s: string) => void,\n//  \t[sym: string]: Comp[] | (() => Comp[]),\n};\n\ntype Level = {\n\tgetPos: (p: Vec2) => Vec2,\n\tspawn: (sym: string, p: Vec2) => void,\n\twidth: () => number,\n\theight: () => number,\n\tdestroy: () => void,\n};\n\nfunction addLevel(map: string[], conf: LevelConf): Level {\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(conf.pos);\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\tgetPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * conf.width,\n\t\t\t\toffset.y + p.y * conf.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, p: Vec2) {\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (Array.isArray(sym)) {\n\t\t\t\t\treturn sym;\n\t\t\t\t} else if (conf[sym]) {\n\t\t\t\t\tif (typeof conf[sym] === \"function\") {\n\t\t\t\t\t\treturn conf[sym]();\n\t\t\t\t\t} else if (Array.isArray(conf[sym])) {\n\t\t\t\t\t\treturn [...conf[sym]];\n\t\t\t\t\t}\n\t\t\t\t} else if (conf.any) {\n\t\t\t\t\treturn conf.any(sym);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (comps) {\n\n\t\t\t\tcomps.push(pos(\n\t\t\t\t\toffset.x + p.x * conf.width,\n\t\t\t\t\toffset.y + p.y * conf.height\n\t\t\t\t));\n\n\t\t\t\tconst obj = add(comps);\n\n\t\t\t\tobjs.push(obj);\n\n\t\t\t\tobj.use({\n\n\t\t\t\t\tgridPos: p.clone(),\n\n\t\t\t\t\tsetGridPos(p: Vec2) {\n\t\t\t\t\t\tthis.gridPos = p.clone();\n\t\t\t\t\t\tthis.pos = vec2(\n\t\t\t\t\t\t\toffset.x + this.gridPos.x * conf.width,\n\t\t\t\t\t\t\toffset.y + this.gridPos.y * conf.height\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\tmoveLeft() {\n\t\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t\t\t\t},\n\n\t\t\t\t\tmoveRight() {\n\t\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t\t\t\t},\n\n\t\t\t\t\tmoveUp() {\n\t\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t\t\t\t},\n\n\t\t\t\t\tmoveDown() {\n\t\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t\t\t\t},\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * conf.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * conf.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nconst lib: KaboomCtx = {\n\tstart,\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\taddLoader: assets.addLoader,\n\t// query\n\twidth: gfx.width,\n\theight: gfx.height,\n\tdt: app.dt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\t// scene\n\tscene,\n\tgo,\n\tsceneData,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tcamShake,\n\tcamIgnore,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// net\n\tsend,\n\trecv,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tsolid,\n\tbody,\n\tshader,\n\t// group events\n\ton,\n\taction,\n\trender,\n\tcollides,\n\toverlaps,\n\tclicks,\n\t// input\n\tkeyDown,\n\tkeyPress,\n\tkeyPressRep,\n\tkeyRelease,\n\tcharInput,\n\tmouseDown,\n\tmouseClick,\n\tmouseRelease,\n\tmousePos,\n\tcursor: app.cursor,\n\tkeyIsDown: app.keyDown,\n\tkeyIsPressed: app.keyPressed,\n\tkeyIsPressedRep: app.keyPressedRep,\n\tkeyIsReleased: app.keyReleased,\n\tmouseIsDown: app.mouseDown,\n\tmouseIsClicked: app.mouseClicked,\n\tmouseIsReleased: app.mouseReleased,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\t// math\n\tmakeRng,\n\trand,\n\trandSeed,\n\tvec2,\n\trgb,\n\trgba,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\twave,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\tdrawRect: gfx.drawRect,\n\tdrawRectStroke: gfx.drawRectStroke,\n\tdrawLine: gfx.drawLine,\n\t// debug\n\tdebug,\n\t// level\n\taddLevel,\n};\n\nif (gconf.plugins) {\n\tfor (const src of gconf.plugins) {\n\t\tconst map = src(lib);\n\t\tfor (const k in map) {\n\t\t\tlib[k] = map[k];\n\t\t}\n\t}\n}\n\nif (gconf.global) {\n\tfor (const k in lib) {\n\t\twindow[k] = lib[k];\n\t}\n}\n\nreturn lib;\n\n};\n"],
  "mappings": "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",
  "names": []
}
